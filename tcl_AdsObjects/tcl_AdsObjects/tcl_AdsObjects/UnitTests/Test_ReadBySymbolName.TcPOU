<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Test_ReadBySymbolName" Id="{d21c2985-39f5-00f4-0c23-485b4edb4585}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Test_ReadBySymbolName EXTENDS T_UnitTestBase
VAR
    AdsPort             : UINT;
    AdsReadBySymbolName : T_AdsReadBySymbolName;
    AdsReadSymbolName   : T_AdsReadSymbolName;
    ValueToRead         : INT;
    State               : INT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Init" Id="{7d4d98d0-f0c5-00d4-06f3-6d60e0f19a99}">
      <Declaration><![CDATA[METHOD Init
]]></Declaration>
      <Implementation>
        <ST><![CDATA[State := 0;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="RunTest" Id="{0e65afb9-8c8d-02a2-129a-59b2a3ce8339}">
      <Declaration><![CDATA[{attribute 'analysis' := '-33'} // inhibit unused variable warning
METHOD RunTest
VAR_OUTPUT
    TestCompleted : BOOL;
    TestFailed    : BOOL;
END_VAR
VAR_INST
    SymbolName : T_MaxString;
    ReadResult : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE State OF
    0:
        AdsPort     := _AppInfo.AdsPort;
        ValueToRead := 1234;
        ReadResult  := 0;
        AdsReadSymbolName.Execute(Address := ADR(ValueToRead),
                                  Length  := SIZEOF(ValueToRead),
                                  PlcPort := AdsPort);
        State := 10;

    10:
        IF NOT AdsReadSymbolName.Execution.Busy THEN
            SymbolName := AdsReadSymbolName.SymbolName;
            State      := 20;
        END_IF

    20:
        AdsReadBySymbolName.Execute(AmsNetId         := '',
                                    Port             := AdsPort,
                                    SymbolName       := SymbolName,
                                    ReadDataAddress  := ADR(ReadResult),
                                    ReadDataLength   := SIZEOF(ReadResult),
                                    KeepSymbolHandle := FALSE);

        State := 30;

    30:
        IF NOT AdsReadBySymbolName.Execution.Busy THEN
            State := 40;
        END_IF

    40:
        AssertTrue(Source    := TestName,
                   Condition := (ReadResult = 1234),
                   Message   := 'Read result <> 1234',
                   Failed    => TestFailed);

        TestCompleted := TRUE;
END_CASE

AdsReadBySymbolName();
AdsReadSymbolName();
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>